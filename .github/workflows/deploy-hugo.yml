# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"] # <--- IMPORTANT: Change "main" to your default branch name if it's different (e.g., "master")

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read # Allow reading of repository content
  pages: write   # Allow writing to GitHub Pages
  id-token: write # Allow authentication for OIDC (OpenID Connect)

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      # Set the Hugo version you want to use. You can pin it to a specific version like '0.126.1'.
      HUGO_VERSION: "latest" # or a specific version like '0.126.1'
      HUGO_ENVIRONMENT: production
      TZ: Europe/London # Or your preferred timezone

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Fetch Hugo themes (if using Git submodules)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true # Use the extended version of Hugo if you need Sass/SCSS, etc.

      - name: Cache Hugo Modules
        uses: actions/cache@v4
        with:
          path: /tmp/hugo_cache # Path to Hugo's module cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Build with Hugo
        # For Hugo Modules, `hugo mod tidy` and `hugo mod get -u`
        # are often run before `hugo`. They are not strictly necessary
        # to run in the workflow if your go.mod is up to date, but
        # including them ensures dependencies are handled.
        run: |
          hugo mod tidy
          hugo mod get -u
          hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public # This is the directory Hugo builds to

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4